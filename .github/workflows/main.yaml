name: Main

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  main:
    name: Run main Job
    runs-on: ubuntu-latest

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache-dependency-path: ui/package-lock.json
          cache: "npm"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      # We don't want to build the entire frondend, so we are using standalone npm ci
      - name: Install frontend packages (w/o go generate)
        working-directory: ./ui
        run: |
          npm ci

      - name: Install ESLint and Prettier
        working-directory: ./ui
        run: |
          npm install eslint@8.10.0
          npm install prettier@3.0.3
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        working-directory: ./ui
        run: npx eslint .
          --config .eslintrc.cjs
          --ignore-path .gitignore
          --ignore-path .gitignore
          --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ui/eslint-results.sarif
          wait-for-processing: true

      - name: Run Prettier
        working-directory: ui
        run: npx prettier src/

      - name: Download go dependencies
        run: go mod download

      - name: Build Frontend
        run: go generate ./...

      - name: Go build
        run: go build -x ./...

      ## TODO: Add Docker build here
